name: 'ðŸ“’ CI (Website) â€” Build'

on:
  pull_request:
    paths:
      - 'website/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    name: Check
    steps:
      - name: Actions - Checkout
        uses: actions/checkout@v4

      - name: Actions - Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-website-${{ hashFiles('website/package-lock.json') }}
          restore-keys: npm-website-

      - name: Installing Dependencies
        run: cd website && npm ci

      - name: Lint Checking
        run: cd website && npm run lint

      - name: Checking Types
        run: cd website && npm run typecheck

      - name: Run Unit Tests
        run: cd website && npm run test:unit

      - name: Checking Build
        run: cd website && npm run build

      - name: Checking Docker Build
        run: cd website && docker compose up -d --build
        env:
          APP_PORT: 3000

      - name: Checking for Service Status Header
        run: |
          sleep 1
          curl --fail --silent --output /dev/null http://localhost:${{ env.APP_PORT }}
        env:
          APP_PORT: 3000

      # Debugging
      - name: ðŸ”— Triggering â€” Website Publish
        if: ${{ steps.release.outputs.releases_created }}
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'cd_docs-deploy.yml',
              ref: 'main'
            });
