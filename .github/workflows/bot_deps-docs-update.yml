# Groups minor and patch dependency updates into a single PR.
name: '⏫ Bot (Website) — Dependencies'

on:
  schedule:
    - cron: '0 3 * * 1-5'
  workflow_dispatch:

env:
  PR_TITLE: 'chore(website): update dependencies'
  BRANCH: 'deps-website'
  PACKAGE_PATH: 'website'
  BODY: '- 🤖 Update website dependencies'
  LABEL: |
    dependencies
    website

jobs:
  update-deps:
    runs-on: ubuntu-latest
    if: github.event.repository.fork == false
    name: Update
    steps:
      - name: ➕ Actions - Checkout
        uses: actions/checkout@v4

      - name: ➕ Actions - Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: ➕ Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-linux-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-linux-

      - name: 🔒 Checking if branch is main
        run: |
          MAIN_BRANCH=$(git remote show origin | grep 'HEAD branch' | awk '{print $NF}')
          if [ "${{ env.BRANCH }}" = "$MAIN_BRANCH" ]; then
            exit 1
          fi

      - name: 📦 Installing Dependencies
        run: cd ${{ env.PACKAGE_PATH }} && npm ci

      - name: ⏫ Updating Dependencies
        run: cd ${{ env.PACKAGE_PATH }} && npm run update

      - name: ⚙️ Configuring Git
        run: |
          git config --global user.name 'wellwelwel'
          git config --global user.email '46850407+wellwelwel@users.noreply.github.com'
          git update-index --refresh > /dev/null 2>&1 || true

      - name: 🔎 Checking for Changes
        id: check_changes
        run: |
          if git diff-index --quiet HEAD --; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: 🤖 Checking open PRs
        if: steps.check_changes.outputs.changes == 'true'
        id: set_pr_exists
        run: |
          echo "pr_exists=false" >> $GITHUB_OUTPUT
          if npx tsx tools/workflows/get-prs.ts --title="${{ env.PR_TITLE }}"; then
            echo "pr_exists=true" >> $GITHUB_OUTPUT
          fi

      - name: 🚀 Commiting and Pushing Changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git add .
          git commit -m "${{ env.PR_TITLE }}"
          git push origin HEAD:refs/heads/${{ env.BRANCH }} --force
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: 🧙🏻 Creating Pull Request
        if: steps.check_changes.outputs.changes == 'true' && steps.set_pr_exists.outputs.pr_exists == 'false'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT }}
          branch: ${{ env.BRANCH }}
          title: '${{ env.PR_TITLE }}'
          body: ${{ env.BRANCH }}
          labels: ${{ env.LABELS }}
          delete-branch: true
