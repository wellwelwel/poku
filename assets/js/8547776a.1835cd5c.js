/*! For license information please see 8547776a.1835cd5c.js.LICENSE.txt */
"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7924],{28453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>o});var r=n(96540);const t={},a=r.createContext(t);function c(e){const s=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),r.createElement(a.Provider,{value:s},e.children)}},38215:(e,s,n)=>{n.d(s,{B:()=>c});var r=n(41622);const t=(0,n(84722).A)("file-clock",[["path",{d:"M14 2v4a2 2 0 0 0 2 2h4",key:"tnqrlb"}],["path",{d:"M16 22h2a2 2 0 0 0 2-2V7l-5-5H6a2 2 0 0 0-2 2v3",key:"37hlfg"}],["path",{d:"M8 14v2.2l1.6 1",key:"6m4bie"}],["circle",{cx:"8",cy:"16",r:"6",key:"10v15b"}]]);var a=n(74848);const c=({records:e,open:s})=>(0,a.jsx)(r.A,{open:s,summary:(0,a.jsxs)("summary",{children:[(0,a.jsx)(t,{})," History"]}),className:"history",children:(0,a.jsxs)("table",{children:[(0,a.jsx)("thead",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{children:"Version"}),(0,a.jsx)("th",{children:"Changes"})]})}),(0,a.jsx)("tbody",{children:e.map((e,s)=>(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsxs)("strong",{children:["v",e.version.replace(/^v/,"")]})}),(0,a.jsx)("td",{children:(0,a.jsx)("div",{className:"changes",children:e.changes.map((e,s)=>(0,a.jsx)("section",{children:e},`change:${s}`))})})]},`record:${s}`))})]})})},41622:(e,s,n)=>{n.d(s,{A:()=>x});var r=n(96540),t=n(34164),a=n(63427),c=n(92303),o=n(41422);const l={details:"details_lb9f",isBrowser:"isBrowser_bmU9",collapsibleContent:"collapsibleContent_i85q"};var i=n(74848);function d(e){return!!e&&("SUMMARY"===e.tagName||d(e.parentElement))}function h(e,s){return!!e&&(e===s||h(e.parentElement,s))}function u({summary:e,children:s,...n}){(0,a.A)().collectAnchor(n.id);const u=(0,c.A)(),p=(0,r.useRef)(null),{collapsed:m,setCollapsed:x}=(0,o.u)({initialState:!n.open}),[g,y]=(0,r.useState)(n.open),j=r.isValidElement(e)?e:(0,i.jsx)("summary",{children:e??"Details"});return(0,i.jsxs)("details",{...n,ref:p,open:g,"data-collapsed":m,className:(0,t.A)(l.details,u&&l.isBrowser,n.className),onMouseDown:e=>{d(e.target)&&e.detail>1&&e.preventDefault()},onClick:e=>{e.stopPropagation();const s=e.target;d(s)&&h(s,p.current)&&(e.preventDefault(),m?(x(!1),y(!0)):x(!0))},children:[j,(0,i.jsx)(o.N,{lazy:!1,collapsed:m,onCollapseTransitionEnd:e=>{x(e),y(!e)},children:(0,i.jsx)("div",{className:l.collapsibleContent,children:s})})]})}const p={details:"details_b_Ee"},m="alert alert--info";function x({...e}){return(0,i.jsx)(u,{...e,className:(0,t.A)(m,p.details,e.className)})}},42467:(e,s,n)=>{n.d(s,{k:()=>h});var r=n(84722);const t=(0,r.A)("triangle-alert",[["path",{d:"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3",key:"wmoenq"}],["path",{d:"M12 9v4",key:"juzpu7"}],["path",{d:"M12 17h.01",key:"p32p05"}]]),a=(0,r.A)("lightbulb",[["path",{d:"M15 14c.2-1 .7-1.7 1.5-2.5 1-.9 1.5-2.2 1.5-3.5A6 6 0 0 0 6 8c0 1 .2 2.2 1.5 3.5.7.7 1.3 1.5 1.5 2.5",key:"1gvzjb"}],["path",{d:"M9 18h6",key:"x1upvd"}],["path",{d:"M10 22h4",key:"ceow96"}]]),c=(0,r.A)("microscope",[["path",{d:"M6 18h8",key:"1borvv"}],["path",{d:"M3 22h18",key:"8prr45"}],["path",{d:"M14 22a7 7 0 1 0 0-14h-1",key:"1jwaiy"}],["path",{d:"M9 14h2",key:"197e7h"}],["path",{d:"M9 12a2 2 0 0 1-2-2V6h6v4a2 2 0 0 1-2 2Z",key:"1bmzmy"}],["path",{d:"M12 6V3a1 1 0 0 0-1-1H9a1 1 0 0 0-1 1v3",key:"1drr47"}]]),o=(0,r.A)("package-search",[["path",{d:"M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14",key:"e7tb2h"}],["path",{d:"m7.5 4.27 9 5.15",key:"1c824w"}],["polyline",{points:"3.29 7 12 12 20.71 7",key:"ousv84"}],["line",{x1:"12",x2:"12",y1:"22",y2:"12",key:"a4e8g8"}],["circle",{cx:"18.5",cy:"15.5",r:"2.5",key:"b5zd12"}],["path",{d:"M20.27 17.27 22 19",key:"1l4muz"}]]),l=(0,r.A)("package-check",[["path",{d:"m16 16 2 2 4-4",key:"gfu2re"}],["path",{d:"M21 10V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l2-1.14",key:"e7tb2h"}],["path",{d:"m7.5 4.27 9 5.15",key:"1c824w"}],["polyline",{points:"3.29 7 12 12 20.71 7",key:"ousv84"}],["line",{x1:"12",x2:"12",y1:"22",y2:"12",key:"a4e8g8"}]]),i=(0,r.A)("lightbulb-off",[["path",{d:"M16.8 11.2c.8-.9 1.2-2 1.2-3.2a6 6 0 0 0-9.3-5",key:"1fkcox"}],["path",{d:"m2 2 20 20",key:"1ooewy"}],["path",{d:"M6.3 6.3a4.67 4.67 0 0 0 1.2 5.2c.7.7 1.3 1.5 1.5 2.5",key:"10m8kw"}],["path",{d:"M9 18h6",key:"x1upvd"}],["path",{d:"M10 22h4",key:"ceow96"}]]);var d=n(74848);const h=({level:e,message:s})=>{const n={0:{title:"Deprecated",icon:(0,d.jsx)(t,{})},1:{title:"Experimental",icon:(0,d.jsx)(a,{})},1.1:{title:"Early Development",icon:(0,d.jsx)(c,{})},1.2:{title:"Release Candidate",icon:(0,d.jsx)(o,{})},2:{title:"Stable",icon:(0,d.jsx)(l,{})},3:{title:"Legacy",icon:(0,d.jsx)(i,{})}};return(0,d.jsxs)("section",{className:"stability","data-level":e,children:[(0,d.jsxs)("header",{children:[(0,d.jsx)("strong",{children:e}),(0,d.jsx)("span",{children:n[e].title}),n[e].icon]}),s?(0,d.jsx)("p",{children:s}):null]})}},50689:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"documentation/helpers/shared-resources","title":"\ud83e\udea2 Shared Resources","description":"<History","source":"@site/docs/documentation/helpers/shared-resources.mdx","sourceDirName":"documentation/helpers","slug":"/documentation/helpers/shared-resources","permalink":"/docs/documentation/helpers/shared-resources","draft":false,"unlisted":false,"editUrl":"https://github.com/wellwelwel/poku/tree/main/website/docs/documentation/helpers/shared-resources.mdx","tags":[{"inline":true,"label":"shared","permalink":"/docs/tags/shared"},{"inline":true,"label":"state","permalink":"/docs/tags/state"},{"inline":true,"label":"resources","permalink":"/docs/tags/resources"},{"inline":true,"label":"e2e","permalink":"/docs/tags/e-2-e"},{"inline":true,"label":"integration","permalink":"/docs/tags/integration"}],"version":"current","sidebarPosition":11,"frontMatter":{"sidebar_position":11,"tags":["shared","state","resources","e2e","integration"]},"sidebar":"docs","previous":{"title":"\ud83c\udf0c only","permalink":"/docs/documentation/helpers/only"},"next":{"title":"\ud83d\uddc4\ufe0f List Files","permalink":"/docs/documentation/helpers/list-files"}}');var t=n(74848),a=n(28453),c=n(38215),o=n(42467);const l={sidebar_position:11,tags:["shared","state","resources","e2e","integration"]},i="\ud83e\udea2 Shared Resources",d={},h=[{value:"What are Shared Resources?",id:"what-are-shared-resources",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"1. Define a Shared Resource",id:"1-define-a-shared-resource",level:3},{value:"2. Access the Shared Resource in Tests",id:"2-access-the-shared-resource-in-tests",level:3},{value:"3. Methods Become Remote Procedure Calls",id:"3-methods-become-remote-procedure-calls",level:3},{value:"4. Detach the Resource",id:"4-detach-the-resource",level:3},{value:"5. Cleanup Logic",id:"5-cleanup-logic",level:3},{value:"Real-World Examples",id:"real-world-examples",level:2},{value:"1. Shared LRU Cache ( <code>lru.min</code> )",id:"1-shared-lru-cache--lrumin-",level:3},{value:"2. Shared MySQL Connection ( <code>mysql2</code> )",id:"2-shared-mysql-connection--mysql2-",level:3}];function u(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"-shared-resources",children:"\ud83e\udea2 Shared Resources"})}),"\n",(0,t.jsx)(c.B,{records:[{version:"3.0.3-canary.60ff5ce2",changes:[(0,t.jsx)(t.Fragment,{children:"Introduce Shared Resources."})]}]}),"\n",(0,t.jsx)(o.k,{level:1}),"\n",(0,t.jsx)(s.p,{children:"Share state and methods between test files and processes, enabling advanced integration and end-to-end testing patterns."}),"\n",(0,t.jsx)(s.h2,{id:"what-are-shared-resources",children:"What are Shared Resources?"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Shared Resources"})," allow you to define a resource (object, state, or API) in a single file and access or mutate it from multiple test files or processes. This is useful for scenarios like:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Sharing a database connection or in-memory store."}),"\n",(0,t.jsx)(s.li,{children:"Coordinating state between parallel or sequential tests."}),"\n",(0,t.jsx)(s.li,{children:"Implementing cross-file setup/teardown logic."}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,t.jsx)(s.h3,{id:"1-define-a-shared-resource",children:"1. Define a Shared Resource"}),"\n",(0,t.jsxs)(s.p,{children:["Create a ",(0,t.jsx)(s.code,{children:".resource.ts"})," file and export a shared resource using ",(0,t.jsx)(s.code,{children:"createSharedResource"})," :"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"import { createSharedResource } from 'poku';\n\nexport default createSharedResource('sharedCounter', () => {\n  let count = 0;\n  return {\n    getCount: () => count,\n    increment: () => ++count,\n    reset: () => {\n      count = 0;\n    },\n  };\n});\n"})}),"\n",(0,t.jsx)(s.h3,{id:"2-access-the-shared-resource-in-tests",children:"2. Access the Shared Resource in Tests"}),"\n",(0,t.jsxs)(s.p,{children:["Use ",(0,t.jsx)(s.code,{children:"getSharedResource"})," in any test file to access and call methods on the shared resource:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"import { getSharedResource, test, assert } from 'poku';\n\ntest('increments the counter', async () => {\n  const [counter, detach] = await getSharedResource('sharedCounter');\n  await counter.increment();\n  assert.equal(await counter.getCount(), 1);\n  detach();\n});\n"})}),"\n",(0,t.jsx)(s.h3,{id:"3-methods-become-remote-procedure-calls",children:"3. Methods Become Remote Procedure Calls"}),"\n",(0,t.jsx)(s.p,{children:"All functions on your resource become remote procedure calls (RPCs), so you can safely mutate or read shared state across processes."}),"\n",(0,t.jsxs)(s.p,{children:["It's important to notice that arguments are serialized using ",(0,t.jsx)(s.a,{href:"https://nodejs.org/api/child_process.html#advanced-serialization",children:"Advanced Serialization"}),"\nduring communication between different procceses, meaning some complex types (as functions) are not supported at this time."]}),"\n",(0,t.jsx)(s.h3,{id:"4-detach-the-resource",children:"4. Detach the Resource"}),"\n",(0,t.jsxs)(s.p,{children:["When you call ",(0,t.jsx)(s.code,{children:"getSharedResource"}),", it returns a tuple with the resource and a ",(0,t.jsx)(s.code,{children:"detach"})," function.\n",(0,t.jsxs)(s.strong,{children:["It is essential to always call ",(0,t.jsx)(s.code,{children:"detach"})," at the end of your test"]}),": this unsubscribes your test\nprocess from updates to the shared resource, ensuring proper cleanup and preventing memory leaks.\nIf you do not call ",(0,t.jsx)(s.code,{children:"detach"}),", your process will remain subscribed, which can lead to resource\nleaks, unnecessary memory usage, and test isolation issues. By always calling ",(0,t.jsx)(s.code,{children:"detach"}),", you keep\nyour test environment clean, predictable, and free from side effects caused by lingering subscriptions."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"test('detaches of the resource', async () => {\n  const [counter, detach] = await getSharedResource('sharedCounter');\n  await counter.increment();\n  assert.equal(await counter.getCount(), 1);\n  detach(); // Clean up the resource\n});\n"})}),"\n",(0,t.jsx)(s.h3,{id:"5-cleanup-logic",children:"5. Cleanup Logic"}),"\n",(0,t.jsx)(s.p,{children:"You can define a cleanup function when creating the resource. This will be called when the resource is no longer needed:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export default createSharedResource(\n  'sharedCounter',\n  () => {\n    let count = 0;\n    return {\n      getCount: () => count,\n      increment: () => ++count,\n      reset: () => {\n        count = 0;\n      },\n    };\n  },\n  (resource) => {\n    // Cleanup logic\n    resource.reset();\n  }\n);\n"})}),"\n",(0,t.jsx)(s.h2,{id:"real-world-examples",children:"Real-World Examples"}),"\n",(0,t.jsxs)(s.h3,{id:"1-shared-lru-cache--lrumin-",children:["1. Shared LRU Cache ( ",(0,t.jsx)(s.code,{children:"lru.min"})," )"]}),"\n",(0,t.jsx)(s.p,{children:"Share an in-memory LRU cache between tests:"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"lru.resource.ts"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"import { createSharedResource } from 'poku';\nimport { createLRU } from 'lru.min';\n\nexport default createSharedResource('lru', () => {\n  const cache = createLRU({ max: 3 });\n  return cache;\n});\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"cache.test.ts"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"import { getSharedResource, test, assert } from 'poku';\n\ntest('can share cache', async () => {\n  const [cache, detach] = await getSharedResource('lru');\n  await cache.set('foo', 123);\n  assert((await cache.get('foo')) === 123);\n  detach();\n});\n"})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(s.h3,{id:"2-shared-mysql-connection--mysql2-",children:["2. Shared MySQL Connection ( ",(0,t.jsx)(s.code,{children:"mysql2"})," )"]}),"\n",(0,t.jsx)(s.p,{children:"Share a single MySQL connection across tests:"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"mysql.resource.ts"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"import { createSharedResource } from 'poku';\nimport mysql from 'mysql2/promise';\n\nexport default createSharedResource(\n  'mysql',\n  async () => {\n    const connection = await mysql.createConnection({\n      host: 'localhost',\n      user: 'root',\n      database: 'test',\n    });\n    return connection;\n  },\n  (connection) => {\n    // Cleanup function to close the connection\n    return connection.destroy();\n  }\n);\n"})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"db.test.ts"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"import { getSharedResource, test, assert } from 'poku';\n\ntest('can query users', async () => {\n  const [db, detach] = await getSharedResource('mysql');\n  const [rows] = await db.query('SELECT * FROM users LIMIT 10');\n\n  assert(Array.isArray(rows));\n  assert.equal(rows.length, 10);\n  detach();\n});\n"})})]})}function p(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},84722:(e,s,n)=>{n.d(s,{A:()=>i});var r=n(96540);const t=e=>{const s=(e=>e.replace(/^([A-Z])|[\s-_]+(\w)/g,(e,s,n)=>n?n.toUpperCase():s.toLowerCase()))(e);return s.charAt(0).toUpperCase()+s.slice(1)},a=(...e)=>e.filter((e,s,n)=>Boolean(e)&&""!==e.trim()&&n.indexOf(e)===s).join(" ").trim(),c=e=>{for(const s in e)if(s.startsWith("aria-")||"role"===s||"title"===s)return!0};var o={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const l=(0,r.forwardRef)(({color:e="currentColor",size:s=24,strokeWidth:n=2,absoluteStrokeWidth:t,className:l="",children:i,iconNode:d,...h},u)=>(0,r.createElement)("svg",{ref:u,...o,width:s,height:s,stroke:e,strokeWidth:t?24*Number(n)/Number(s):n,className:a("lucide",l),...!i&&!c(h)&&{"aria-hidden":"true"},...h},[...d.map(([e,s])=>(0,r.createElement)(e,s)),...Array.isArray(i)?i:[i]])),i=(e,s)=>{const n=(0,r.forwardRef)(({className:n,...c},o)=>{return(0,r.createElement)(l,{ref:o,iconNode:s,className:a(`lucide-${i=t(e),i.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}`,`lucide-${e}`,n),...c});var i});return n.displayName=t(e),n}}}]);